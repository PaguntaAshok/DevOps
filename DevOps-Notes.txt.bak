=============================
What is Operating System ?
=============================

=> Operating System is a software which acts as mediator between Users and Computers

=> OS is mandatory to use any computer

=> There is no use of Computer which doesn't have Operating System

=> By using OS we can run applications in computer


=====================
What is Windows OS ?
=====================

-> Windows OS developed by Microsoft (Bill Gates) Company

-> Windows OS is licensed s/w (we have to purchase)

-> Windows OS is single user Operating System

-> Security Features are less in Windows OS

-> Anti Virus S/w we have to install to proectect our System.

-> Windows OS is GUI (Graphical User Interface) based.

-> Windows OS is recommended for Personal Use (gaming/movies/calculations/files)



==========
Linux OS
=========

-> Linux is free OS

-> Linux is Multi User Operating System

-> Security Features are very good in Linux OS (Anti Virus not required)

-> To run Servers, Databases Linux OS is highly recommended

-> Linux is CLI (Command Line Interface) based

Note: We should learn Linux commands to use Linux Machines.

=================
History of Linux 
==================

-> Linux OS developed by " Linus Torvalds "

-> Before Linux we had Unix Operating System. Linus Torvalds identified some issues in Unix OS and told to that company to fix those issues. But Unix company rejected the suggestions given by Linux Torvalds.

-> Linus Torvalds used 'Minux' OS and developed his Own OS that is called as Linux OS.


	(Li) nus   + Mi (nux)  => Linux 


-> Linus Torvalds developed Linux OS and released Linux OS source code into market for free of cost.

-> So many companies downloaded the Linux OS source code and modified according to their requirement and released into market with their brand names those are called as Linux Distributions / Linux flavours.

-> Linux having 200+ Distributions.

			-> RED HAT Linux
			-> Cent OS Linux
			-> Ubuntu Linux		
			-> Debian Linux
			-> SUSE Linux
			-> FEDORA Linux
			-> KALI Linux
			-> Amazon Linux

=====================
Linux Machine Setup
=====================

1) Install Linux OS directley in our Machine

2) Create Virtual Machine in Cloud Platform (AWS)



==================
Lab Task for Today
===================

1) Create Linux Virtual Machine in AWS Cloud (Amazon Linux)

2) Download MobaXterm s/w

3) Connect with Linux VM using MobaXterm.


=================
Linux Commands
=================

whoami : Logged in username

date : display current date

cal : display calendar

clear : to erase terminal content

pwd : To display present working directory

mkdir : to create directory

rmdir : to delete empty directory

Note: To delete non-empty directories  we will use below command

		$ rm -r <dirname>

cd : to change directory 

ls : To display files & directories of present working directory

		ls -l : display files and directories in alphabetical order

		ls -lr : reverse of alphabetical order

		ls -lt :  Display files based creation date & time (latest on top)

		ls -ltr : Display files based creation date & time (latest on bottom)

touch : To create empty files

		$ touch f1.txt f2.txt f3.txt

cat :  create files with data , append data to existing file, display file content


			cat > filename   (To create file with content)

			cat >> filename  (append data to existing file)
			
			cat filename (display file content)


Note: cat command will display file data from top to bottom.

tac : tac command will display file data from bottom to top

		$ tac filename

cp : It is used to copy data from one file to another file

		$ cp f1.txt f2.txt

Note: To copy data from multiple files we need to use 'cat' command.

		$ cat f1.txt f2.txt > f3.txt

rm : to delete file

		$ rm filename

mv : to move / rename the file

		$ mv old-name  new-name

		$ mv filename <location>

wc : word count
 cat <filename>
 cat f3.txt
	This is f1
	This is Linux
	This is AWS concept
	This is f2
	This is text file


head : To display first 10 lines of file

		$ head <filename>  (default first 10 lines)

		$ head -n 12 <filename>  (it will give first 12 lines)

		$ head -n 50 <filename>  (it will give first 50 lines)

tail : To display last 10 lines of file

		$ tail <filename>  (default last 10 lines)

		$ tail -n 15 <filename> (it will give last 15 lines)


Note: To check latest logs of the application we will use 'tail' command.



=======================
Text Editor in Linux
=======================

vi : visual editor

=> Using 'vi' command we can work with text editor

=> To open file we can use below command

		$ vi ashokit.txt

insert mode : press 'i'

escape mode : press 'esc'

To save changes and close file => esc + :wq

Close file without saving changes => esc + :q!



=============
SED command
=============

=> SED stands for stream editor

=> SED is used for substitution/replacement

=> We can replace one word with another word using SED command without opening the file

	$ sed 's/aws/azure/' ashokit.txt

Note: By default, SED command will not make changes in the original file. It will just print output on terminal.

	$ sed -i 's/aws/azure/' ashokit.txt

=> Delete last line of the file

	$ sed '$d' ashokit.txt

=> Delete 5th line of the file

	$ sed '5d' ashokit.txt

=> Delete 10th line to last line

	$ sed '10,$d' ashokit.txt


=================
File Permissions
=================

=> We have 3 types of permissions

	r  : read
	w  : write
	x  : execute

=> File Permission contains 3 sections (total 9 characters)

	1) User section (first 3 characters)
	2) Group Section (middle 3 characters)
	3) Others section (last 3 characters)

-rwxrwxrwx    f1.txt (here initially - means text file)

-rw-rw-r--    f2.txt

-r--rw-rw-    f3.txt

dr-xr--rwx    linux (here initially d means directory file)


=> To change file permission we have 'chmod' command in linux

		+  :  means add permission

		-   : means remove permission

chmod u+x  f1.txt (adding execute permission for user)

chmod g+x  f2.txt  (adding execute permission for group)

chmod o-x  f3.txt  (removing execute permission for others)

chmod u+wx f4.txt  (adding write and execute for user)



=> File permissions we can manage with numeric numbers also


0 : No Permission

1 : Execute

2 : Write

3 : Execute + Write

4 : Read

5 : Read + Execute

6 : Read + Write

7 : Read + Write + Execute

  chmod 777 f1.txt

Q-1) What is the default permission for the file in numeric format ?  (664)

Q-2) What is the default permission for the directory in numeric format ? (775)



=========================
Users & Groups in Linux
=========================

-> Linux is Multi User based OS

-> We can create Multiple User accounts in one Linux Machine

-> In Every Linux machine by default 'root' user account will be available

	root user : super user (root user will have all the permission in the Linux)

-> When we launch EC2 instance ( Amazon Linux AMI ) We got 'ec2-user' account also.

-> For every user account one home directory will be available under /home directory

		ec2-user : /home/ec2-user

		ashok	 : /home/ashok

		john	 :  /home/john

		cathy	 : /home/cathy

		raju 	 : /home/raju


=> We can get user account information by using 'id' command

		$ id <username>

		Example: [ec2-user@ip-172-31-35-199 ~]$ id ec2-user
			 uid=1000(ec2-user) gid=1000(ec2-user) groups=1000(ec2-user),4(adm),10(wheel),190(systemd-journal)

Note: ~(tild) Represent we are in the home directory.
[ec2-user@ip-172-31-35-199 ~]$ cd ~
[ec2-user@ip-172-31-35-199 ~]$ pwd
/home/ec2-user
==>here logged in user home directory

# switch to root user

	$ sudo su (switch to root account)

	$ sudo su - (switch to root user and point to root user home directory)

	$ exit  (exit from user account)


# switch to root user

	$ sudo su (switch to root account)
		[ec2-user@ip-172-31-35-199 ~]$ sudo su	(sudo means super user permission and su means Super user)
		[root@ip-172-31-35-199 ec2-user]

	$ sudo su - (switch to root user and point to root user home directory)
	        [ec2-user@ip-172-31-35-199 ~]$ pwd
		/home/ec2-user
		[ec2-user@ip-172-31-35-199 ~]$ sudo su -
		Last login: Sat Jun 17 19:27:51 UTC 2023 on pts/0
		[root@ip-172-31-35-199 ~]#

	
	$ exit  (exit from user account)
	s
                                                                
[ec2-user@ip-172-31-35-199 ~]$ pwd
/home/ec2-user
[ec2-user@ip-172-31-35-199 ~]$ sudo su	 (switch to root account)
[root@ip-172-31-35-199 ec2-user]# exit	 (exit from user account)
exit
[ec2-user@ip-172-31-35-199 ~]$ sudo su -u (switch to root user and point to root user home directory)
su: option requires an argument -- 'u'
Try 'su --help' for more information.
[ec2-user@ip-172-31-35-199 ~]$ sudo su -
Last login: Sat Jun 17 19:40:37 UTC 2023 on pts/0
[root@ip-172-31-35-199 ~]# pwd
/root
[root@ip-172-31-35-199 ~]#


=======================================
Working with Users and Groups in Linux
=======================================



# Switch to root user

	$ sudo su -

# Create New User account

	$ useradd <uname>

# Set Password for User

	$ passwd <uname>

# Display Users created

	$ cat /etc/passwd 

# Switch to user account

	$ su <username>

# Delete user

	$ userdel <uname>  (user will be deleted but user home directory will not be deleted)

	$ userdel <uname> --remove  (user deletion + user home directory deletion)

[root@ip-172-31-35-199 ~]# pwd
/root
[root@ip-172-31-35-199 ~]# sudo useradd Ruthwika
useradd: user 'Ruthwika' already exists
[root@ip-172-31-35-199 ~]# sudo passwd Ruthwika
Changing password for user Ruthwika.
New password:
BAD PASSWORD: The password contains the user name in some form
Retype new password:
passwd: all authentication tokens updated successfully.
[root@ip-172-31-35-199 ~]# pwd
/root
[root@ip-172-31-35-199 ~]# cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
nobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin
dbus:x:81:81:System message bus:/:/sbin/nologin
systemd-network:x:192:192:systemd Network Management:/:/usr/sbin/nologin
systemd-oom:x:999:999:systemd Userspace OOM Killer:/:/usr/sbin/nologin
systemd-resolve:x:193:193:systemd Resolver:/:/usr/sbin/nologin
sshd:x:74:74:Privilege-separated SSH:/usr/share/empty.sshd:/sbin/nologin
rpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin
libstoragemgmt:x:997:997:daemon account for libstoragemgmt:/:/usr/sbin/nologin
systemd-coredump:x:996:996:systemd Core Dumper:/:/usr/sbin/nologin
systemd-timesync:x:995:995:systemd Time Synchronization:/:/usr/sbin/nologin
chrony:x:994:994:chrony system user:/var/lib/chrony:/sbin/nologin
rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin
ec2-instance-connect:x:993:993::/home/ec2-instance-connect:/sbin/nologin
tcpdump:x:72:72::/:/sbin/nologin
ec2-user:x:1000:1000:EC2 Default User:/home/ec2-user:/bin/bash
Ruthwika:x:1001:1001::/home/Ruthwika:/bin/bash
[root@ip-172-31-35-199 ~]#															      

Note : Whenever add the user(sudo useradd ashok) group also cread(groups: ashok) so you can check byusing cat /etc/group(store the groups information and 
        you can check id <username>

# Display all groups available in Linux

	$ cat /etc/group

# Create New Group

	$ groupadd <group-name>

# Adding user to group

	$ usermod -aG <group-name> <user-name>

# Remove user from the group
	
	$ gpasswd -d <user-name> <group-name>

# Display Users belongs to a group

	$ sudo lid -g <group-name>


# Delete Group

	$ groupdel <group-name>

# Change Group Name

	$ groupmod -n <new-name> <old-name>

# change username

	$ usermod -l <new-name> <old-name>

# Change User password

	$ passwd <uname>


==================
chown command
=================

=> This is used for ownership change

# change owner of the file

	$ sudo chown <uname> <file-name/directory-name>

# We can change owner of the file using user-id also

	$ sudo chown <UID> <file-name/directory-name>

# change owner-group

	$ sudo chown :group-name <file-name/directory-name>

# change owner-group using group-id

	$ sudo chown :group-id <file-name/directory-name>

# change owner and group at a time

	$ sudo chown <user>:<group> <file>
















































































